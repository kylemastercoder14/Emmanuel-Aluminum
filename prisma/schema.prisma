generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String   @id @default(uuid())
  name            String
  email           String   @unique
  phoneNumber     String
  password        String
  otpCode         String?
  isEmailVerified Boolean  @default(false)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Staff {
  id          String   @id @default(uuid())
  firstName   String
  lastName    String
  username    String   @unique
  password    String
  phoneNumber String
  image       String?
  role        String   @default("Staff")
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Supplier {
  id          String   @id @default(uuid())
  name        String
  address     String
  phoneNumber String
  status      Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  materials Material[]
}

model Material {
  id          String   @id @default(uuid())
  name        String
  description String?
  image       String?
  unit        String
  price       Float
  stock       Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  supplierId String
  supplier   Supplier @relation(fields: [supplierId], references: [id])

  services Service[]
}

model Service {
  id          String   @id @default(uuid())
  name        String
  description String?
  images      String[]
  colors      String[]
  price       Float
  type        String?
  category    String
  isAvailable Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  materials Material[]
}

model Task {
  id        String   @id @default(uuid())
  subject   String
  status    String   @default("Pending")
  priority  String   @default("Medium")
  startDate String
  endDate   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
